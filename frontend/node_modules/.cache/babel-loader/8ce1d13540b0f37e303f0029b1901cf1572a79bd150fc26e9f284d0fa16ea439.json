{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prava\\\\OneDrive\\\\Desktop\\\\login\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './styles/StudentDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentDashboard() {\n  _s();\n  const [files, setFiles] = useState(Array(10).fill({\n    name: '',\n    file: null\n  })); // Array to hold 10 file inputs\n  const {\n    email\n  } = useParams(); // Get email from URL parameters\n  const [student, setStudent] = useState({});\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const handleFileChange = (index, e) => {\n    const updatedFiles = [...files];\n    updatedFiles[index] = {\n      ...updatedFiles[index],\n      file: e.target.files[0]\n    };\n    setFiles(updatedFiles);\n  };\n  const handleNameChange = (index, e) => {\n    const updatedFiles = [...files];\n    updatedFiles[index] = {\n      ...updatedFiles[index],\n      name: e.target.value\n    };\n    setFiles(updatedFiles);\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!email) {\n      alert('Email is required!');\n      return;\n    }\n    const uploadPromises = files.map(async (fileObj, index) => {\n      if (fileObj.file && fileObj.name) {\n        const formData = new FormData();\n        formData.append('file', fileObj.file);\n        formData.append('name', fileObj.name);\n        formData.append('email', email);\n        try {\n          const response = await axios.post('http://localhost:8080/upload', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          return response.data;\n        } catch (error) {\n          console.error(`Error uploading file ${index + 1}:`, error);\n        }\n      }\n      return null;\n    });\n    const results = await Promise.all(uploadPromises);\n    const successfulUploads = results.filter(result => result !== null);\n    if (successfulUploads.length > 0) {\n      alert('Files uploaded successfully!');\n      fetchFiles();\n    }\n  };\n  const fetchFiles = useCallback(async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/files/${email}`);\n      setUploadedFiles(response.data);\n    } catch (error) {\n      console.error('Error fetching uploaded files:', error);\n    }\n  }, [email]);\n  const fetchStudentDetails = useCallback(async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/api/mentor/student/${email}/details`);\n      setStudent(response.data.student);\n    } catch (error) {\n      console.error('Error fetching student details:', error);\n    }\n  }, [email]);\n  useEffect(() => {\n    if (email) {\n      fetchFiles();\n      fetchStudentDetails();\n    }\n  }, [email, fetchFiles, fetchStudentDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome back, \", student.name || 'Student', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload your certificates - Get Credit Points.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Marks: \", student.marks || 0]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      className: \"upload-form\",\n      children: [files.map((fileObj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"File \", index + 1, \" Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: fileObj.name,\n            onChange: e => handleNameChange(index, e),\n            placeholder: \"Enter file name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload File:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => handleFileChange(index, e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Uploaded Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: uploadedFiles.length > 0 ? uploadedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `http://localhost:8080/uploads/${file.filename}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [file.originalname, \" (\", file.name, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)\n      }, file._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No files uploaded yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentDashboard, \"UYsD4JQMbIFa3ll6Lr0vlvNcynE=\", false, function () {\n  return [useParams];\n});\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useParams","jsxDEV","_jsxDEV","StudentDashboard","_s","files","setFiles","Array","fill","name","file","email","student","setStudent","uploadedFiles","setUploadedFiles","handleFileChange","index","e","updatedFiles","target","handleNameChange","value","handleUpload","preventDefault","alert","uploadPromises","map","fileObj","formData","FormData","append","response","post","headers","data","error","console","results","Promise","all","successfulUploads","filter","result","length","fetchFiles","get","fetchStudentDetails","className","children","fileName","_jsxFileName","lineNumber","columnNumber","marks","onSubmit","type","onChange","placeholder","required","href","filename","rel","originalname","_id","_c","$RefreshReg$"],"sources":["C:/Users/prava/OneDrive/Desktop/login/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport './styles/StudentDashboard.css';\r\n\r\nfunction StudentDashboard() {\r\n  const [files, setFiles] = useState(Array(10).fill({ name: '', file: null })); // Array to hold 10 file inputs\r\n  const { email } = useParams(); // Get email from URL parameters\r\n  const [student, setStudent] = useState({});\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n\r\n  const handleFileChange = (index, e) => {\r\n    const updatedFiles = [...files];\r\n    updatedFiles[index] = { ...updatedFiles[index], file: e.target.files[0] };\r\n    setFiles(updatedFiles);\r\n  };\r\n\r\n  const handleNameChange = (index, e) => {\r\n    const updatedFiles = [...files];\r\n    updatedFiles[index] = { ...updatedFiles[index], name: e.target.value };\r\n    setFiles(updatedFiles);\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!email) {\r\n      alert('Email is required!');\r\n      return;\r\n    }\r\n\r\n    const uploadPromises = files.map(async (fileObj, index) => {\r\n      if (fileObj.file && fileObj.name) {\r\n        const formData = new FormData();\r\n        formData.append('file', fileObj.file);\r\n        formData.append('name', fileObj.name);\r\n        formData.append('email', email);\r\n\r\n        try {\r\n          const response = await axios.post('http://localhost:8080/upload', formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' },\r\n          });\r\n          return response.data;\r\n        } catch (error) {\r\n          console.error(`Error uploading file ${index + 1}:`, error);\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n\r\n    const results = await Promise.all(uploadPromises);\r\n    const successfulUploads = results.filter((result) => result !== null);\r\n    if (successfulUploads.length > 0) {\r\n      alert('Files uploaded successfully!');\r\n      fetchFiles();\r\n    }\r\n  };\r\n\r\n  const fetchFiles = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8080/files/${email}`);\r\n      setUploadedFiles(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching uploaded files:', error);\r\n    }\r\n  }, [email]);\r\n\r\n  const fetchStudentDetails = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8080/api/mentor/student/${email}/details`);\r\n      setStudent(response.data.student);\r\n    } catch (error) {\r\n      console.error('Error fetching student details:', error);\r\n    }\r\n  }, [email]);\r\n\r\n  useEffect(() => {\r\n    if (email) {\r\n      fetchFiles();\r\n      fetchStudentDetails();\r\n    }\r\n  }, [email, fetchFiles, fetchStudentDetails]);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Welcome back, {student.name || 'Student'}!</h2>\r\n      <p>Upload your certificates - Get Credit Points.</p>\r\n      <p>Total Marks: {student.marks || 0}</p>\r\n      \r\n      <form onSubmit={handleUpload} className=\"upload-form\">\r\n        {files.map((fileObj, index) => (\r\n          <div key={index} className=\"file-upload-group\">\r\n            <label>\r\n              File {index + 1} Name:\r\n              <input\r\n                type=\"text\"\r\n                value={fileObj.name}\r\n                onChange={(e) => handleNameChange(index, e)}\r\n                placeholder=\"Enter file name\"\r\n                required\r\n              />\r\n            </label>\r\n            \r\n            <label>\r\n              Upload File:\r\n              <input\r\n                type=\"file\"\r\n                onChange={(e) => handleFileChange(index, e)}\r\n                required\r\n              />\r\n            </label>\r\n          </div>\r\n        ))}\r\n        \r\n        <button type=\"submit\">Upload Files</button>\r\n      </form>\r\n      \r\n      <h3>Your Uploaded Files</h3>\r\n      <ul>\r\n        {uploadedFiles.length > 0 ? (\r\n          uploadedFiles.map((file) => (\r\n            <li key={file._id}>\r\n              <a href={`http://localhost:8080/uploads/${file.filename}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {file.originalname} ({file.name})\r\n              </a>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No files uploaded yet.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACW,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC;IAAEC,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9E,MAAM;IAAEC;EAAM,CAAC,GAAGX,SAAS,CAAC,CAAC,CAAC,CAAC;EAC/B,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMoB,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,CAAC,KAAK;IACrC,MAAMC,YAAY,GAAG,CAAC,GAAGd,KAAK,CAAC;IAC/Bc,YAAY,CAACF,KAAK,CAAC,GAAG;MAAE,GAAGE,YAAY,CAACF,KAAK,CAAC;MAAEP,IAAI,EAAEQ,CAAC,CAACE,MAAM,CAACf,KAAK,CAAC,CAAC;IAAE,CAAC;IACzEC,QAAQ,CAACa,YAAY,CAAC;EACxB,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAACJ,KAAK,EAAEC,CAAC,KAAK;IACrC,MAAMC,YAAY,GAAG,CAAC,GAAGd,KAAK,CAAC;IAC/Bc,YAAY,CAACF,KAAK,CAAC,GAAG;MAAE,GAAGE,YAAY,CAACF,KAAK,CAAC;MAAER,IAAI,EAAES,CAAC,CAACE,MAAM,CAACE;IAAM,CAAC;IACtEhB,QAAQ,CAACa,YAAY,CAAC;EACxB,CAAC;EAED,MAAMI,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAI,CAACb,KAAK,EAAE;MACVc,KAAK,CAAC,oBAAoB,CAAC;MAC3B;IACF;IAEA,MAAMC,cAAc,GAAGrB,KAAK,CAACsB,GAAG,CAAC,OAAOC,OAAO,EAAEX,KAAK,KAAK;MACzD,IAAIW,OAAO,CAAClB,IAAI,IAAIkB,OAAO,CAACnB,IAAI,EAAE;QAChC,MAAMoB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,OAAO,CAAClB,IAAI,CAAC;QACrCmB,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,OAAO,CAACnB,IAAI,CAAC;QACrCoB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEpB,KAAK,CAAC;QAE/B,IAAI;UACF,MAAMqB,QAAQ,GAAG,MAAMjC,KAAK,CAACkC,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;YAC1EK,OAAO,EAAE;cAAE,cAAc,EAAE;YAAsB;UACnD,CAAC,CAAC;UACF,OAAOF,QAAQ,CAACG,IAAI;QACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwBnB,KAAK,GAAG,CAAC,GAAG,EAAEmB,KAAK,CAAC;QAC5D;MACF;MACA,OAAO,IAAI;IACb,CAAC,CAAC;IAEF,MAAME,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACd,cAAc,CAAC;IACjD,MAAMe,iBAAiB,GAAGH,OAAO,CAACI,MAAM,CAAEC,MAAM,IAAKA,MAAM,KAAK,IAAI,CAAC;IACrE,IAAIF,iBAAiB,CAACG,MAAM,GAAG,CAAC,EAAE;MAChCnB,KAAK,CAAC,8BAA8B,CAAC;MACrCoB,UAAU,CAAC,CAAC;IACd;EACF,CAAC;EAED,MAAMA,UAAU,GAAG/C,WAAW,CAAC,YAAY;IACzC,IAAI;MACF,MAAMkC,QAAQ,GAAG,MAAMjC,KAAK,CAAC+C,GAAG,CAAC,+BAA+BnC,KAAK,EAAE,CAAC;MACxEI,gBAAgB,CAACiB,QAAQ,CAACG,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC,EAAE,CAACzB,KAAK,CAAC,CAAC;EAEX,MAAMoC,mBAAmB,GAAGjD,WAAW,CAAC,YAAY;IAClD,IAAI;MACF,MAAMkC,QAAQ,GAAG,MAAMjC,KAAK,CAAC+C,GAAG,CAAC,4CAA4CnC,KAAK,UAAU,CAAC;MAC7FE,UAAU,CAACmB,QAAQ,CAACG,IAAI,CAACvB,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC,EAAE,CAACzB,KAAK,CAAC,CAAC;EAEXd,SAAS,CAAC,MAAM;IACd,IAAIc,KAAK,EAAE;MACTkC,UAAU,CAAC,CAAC;MACZE,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACpC,KAAK,EAAEkC,UAAU,EAAEE,mBAAmB,CAAC,CAAC;EAE5C,oBACE7C,OAAA;IAAK8C,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC/C,OAAA;MAAA+C,QAAA,GAAI,gBAAc,EAACrC,OAAO,CAACH,IAAI,IAAI,SAAS,EAAC,GAAC;IAAA;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDnD,OAAA;MAAA+C,QAAA,EAAG;IAA6C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpDnD,OAAA;MAAA+C,QAAA,GAAG,eAAa,EAACrC,OAAO,CAAC0C,KAAK,IAAI,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAExCnD,OAAA;MAAMqD,QAAQ,EAAEhC,YAAa;MAACyB,SAAS,EAAC,aAAa;MAAAC,QAAA,GAClD5C,KAAK,CAACsB,GAAG,CAAC,CAACC,OAAO,EAAEX,KAAK,kBACxBf,OAAA;QAAiB8C,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC5C/C,OAAA;UAAA+C,QAAA,GAAO,OACA,EAAChC,KAAK,GAAG,CAAC,EAAC,QAChB,eAAAf,OAAA;YACEsD,IAAI,EAAC,MAAM;YACXlC,KAAK,EAAEM,OAAO,CAACnB,IAAK;YACpBgD,QAAQ,EAAGvC,CAAC,IAAKG,gBAAgB,CAACJ,KAAK,EAAEC,CAAC,CAAE;YAC5CwC,WAAW,EAAC,iBAAiB;YAC7BC,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAERnD,OAAA;UAAA+C,QAAA,GAAO,cAEL,eAAA/C,OAAA;YACEsD,IAAI,EAAC,MAAM;YACXC,QAAQ,EAAGvC,CAAC,IAAKF,gBAAgB,CAACC,KAAK,EAAEC,CAAC,CAAE;YAC5CyC,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA,GAnBApC,KAAK;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBV,CACN,CAAC,eAEFnD,OAAA;QAAQsD,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eAEPnD,OAAA;MAAA+C,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnD,OAAA;MAAA+C,QAAA,EACGnC,aAAa,CAAC8B,MAAM,GAAG,CAAC,GACvB9B,aAAa,CAACa,GAAG,CAAEjB,IAAI,iBACrBR,OAAA;QAAA+C,QAAA,eACE/C,OAAA;UAAG0D,IAAI,EAAE,iCAAiClD,IAAI,CAACmD,QAAQ,EAAG;UAACzC,MAAM,EAAC,QAAQ;UAAC0C,GAAG,EAAC,qBAAqB;UAAAb,QAAA,GACjGvC,IAAI,CAACqD,YAAY,EAAC,IAAE,EAACrD,IAAI,CAACD,IAAI,EAAC,GAClC;QAAA;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC,GAHG3C,IAAI,CAACsD,GAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACL,CAAC,gBAEFnD,OAAA;QAAA+C,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAC/B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACjD,EAAA,CA/HQD,gBAAgB;EAAA,QAELH,SAAS;AAAA;AAAAiE,EAAA,GAFpB9D,gBAAgB;AAiIzB,eAAeA,gBAAgB;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}