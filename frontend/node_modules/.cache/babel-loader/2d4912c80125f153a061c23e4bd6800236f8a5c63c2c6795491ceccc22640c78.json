{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prava\\\\OneDrive\\\\Desktop\\\\login\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentDashboard() {\n  _s();\n  const [file, setFile] = useState(null);\n  //const [email, setEmail] = useState('');\n  const [files, setFiles] = useState([]);\n  const {\n    email\n  } = useParams(); // Get email from URL parameters\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  /*\r\n    const handleEmailChange = (e) => {\r\n      setEmail(e.target.value);\r\n    };\r\n  */\n\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file || !email) {\n      alert('Please select a file and enter your email!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('email', email);\n    try {\n      const response = await axios.post('http://localhost:8080/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert(response.data.message);\n      fetchFiles(); // Fetch files again after upload\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  const fetchFiles = useCallback(async () => {\n    if (email) {\n      try {\n        const response = await axios.get(`http://localhost:8080/files/${email}`);\n        setFiles(response.data);\n        console.log('Fetched files:', response.data); // Log fetched files\n      } catch (error) {\n        console.error('Error fetching files:', error);\n      }\n    }\n  }, [email]);\n  useEffect(() => {\n    if (email) {\n      fetchFiles(); // Fetch files when the email is not empty\n    }\n  }, [email, fetchFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Student Dashboard for \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: \"File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Uploaded Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.length > 0 ? files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `http://localhost:8080/uploads/${file.filename}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: file.originalname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)\n      }, file._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No files uploaded yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentDashboard, \"M8mTbPSC0fa6v6ehmZSGYscIDTg=\", false, function () {\n  return [useParams];\n});\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useParams","jsxDEV","_jsxDEV","StudentDashboard","_s","file","setFile","files","setFiles","email","handleFileChange","e","target","handleUpload","preventDefault","alert","formData","FormData","append","response","post","headers","data","message","fetchFiles","error","console","get","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","length","map","href","filename","rel","originalname","_id","_c","$RefreshReg$"],"sources":["C:/Users/prava/OneDrive/Desktop/login/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nfunction StudentDashboard() {\r\n  const [file, setFile] = useState(null);\r\n  //const [email, setEmail] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const { email } = useParams(); // Get email from URL parameters\r\n\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n/*\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n*/\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!file || !email) {\r\n      alert('Please select a file and enter your email!');\r\n      return;\r\n    }\r\n\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('email', email);\r\n\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/upload', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n      alert(response.data.message);\r\n      fetchFiles(); // Fetch files again after upload\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const fetchFiles = useCallback(async () => {\r\n    if (email) {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/files/${email}`);\r\n        setFiles(response.data);\r\n        console.log('Fetched files:', response.data); // Log fetched files\r\n      } catch (error) {\r\n        console.error('Error fetching files:', error);\r\n      }\r\n    }\r\n  }, [email]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (email) {\r\n      fetchFiles(); // Fetch files when the email is not empty\r\n    }\r\n  }, [email, fetchFiles]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Student Dashboard for {email}</h2>\r\n      <form onSubmit={handleUpload}>\r\n        <div>\r\n          <label htmlFor=\"file\">File:</label>\r\n          <input\r\n            type=\"file\"\r\n            onChange={handleFileChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Upload File</button>\r\n      </form>\r\n      <h3>Your Uploaded Files</h3>\r\n      <ul>\r\n        {files.length > 0 ? (\r\n          files.map(file => (\r\n            <li key={file._id}>\r\n              <a href={`http://localhost:8080/uploads/${file.filename}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {file.originalname}\r\n              </a>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No files uploaded yet.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default StudentDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}