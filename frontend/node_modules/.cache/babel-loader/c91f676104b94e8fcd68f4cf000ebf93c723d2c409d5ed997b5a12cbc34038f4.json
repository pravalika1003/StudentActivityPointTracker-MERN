{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prava\\\\OneDrive\\\\Desktop\\\\login\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './styles/StudentDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentDashboard() {\n  _s();\n  // Initialize files array with unique objects\n  const [files, setFiles] = useState(Array.from({\n    length: 10\n  }, () => ({\n    name: '',\n    file: null,\n    isUploaded: false\n  })));\n  const {\n    email\n  } = useParams();\n  const [student, setStudent] = useState({});\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleFileChange = (index, e) => {\n    const updatedFiles = [...files];\n    updatedFiles[index] = {\n      ...updatedFiles[index],\n      file: e.target.files[0]\n    };\n    setFiles(updatedFiles);\n  };\n  const handleNameChange = (index, e) => {\n    const updatedFiles = [...files];\n    updatedFiles[index] = {\n      ...updatedFiles[index],\n      name: e.target.value\n    };\n    setFiles(updatedFiles);\n  };\n  const handleUpload = async index => {\n    setErrorMessage('');\n    if (!email) {\n      alert('Email is required!');\n      return;\n    }\n    const fileObj = files[index];\n    if (fileObj.file && fileObj.name) {\n      const formData = new FormData();\n      formData.append('file', fileObj.file);\n      formData.append('name', fileObj.name);\n      formData.append('email', email);\n      try {\n        const response = await axios.post('http://localhost:8080/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        // Mark the file as uploaded\n        const updatedFiles = [...files];\n        updatedFiles[index] = {\n          ...updatedFiles[index],\n          isUploaded: true\n        };\n        setFiles(updatedFiles);\n\n        // Refresh uploaded files list\n        fetchFiles();\n        alert(`File \"${fileObj.name}\" uploaded successfully!`);\n      } catch (error) {\n        console.error(`Error uploading file \"${fileObj.name}\":`, error);\n        setErrorMessage(`Failed to upload \"${fileObj.name}\". Please try again.`);\n      }\n    } else {\n      setErrorMessage('File name and file are required for upload.');\n    }\n  };\n  const fetchFiles = useCallback(async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/files/${email}`);\n      setUploadedFiles(response.data);\n    } catch (error) {\n      console.error('Error fetching uploaded files:', error);\n    }\n  }, [email]);\n  const fetchStudentDetails = useCallback(async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/api/mentor/student/${email}/details`);\n      setStudent(response.data.student);\n    } catch (error) {\n      console.error('Error fetching student details:', error);\n    }\n  }, [email]);\n  useEffect(() => {\n    if (email) {\n      fetchFiles();\n      fetchStudentDetails();\n    }\n  }, [email, fetchFiles, fetchStudentDetails]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome back, \", student.name || 'Student', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Upload your certificates - Get Credit Points.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Marks: \", student.marks || 0]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 24\n    }, this), files.map((fileObj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"File \", index + 1, \" Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: fileObj.name,\n          onChange: e => handleNameChange(index, e),\n          placeholder: \"Enter file name\",\n          required: true,\n          disabled: fileObj.isUploaded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Choose File:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileChange(index, e),\n          required: true,\n          disabled: fileObj.isUploaded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpload(index),\n        disabled: fileObj.isUploaded,\n        children: fileObj.isUploaded ? 'Uploaded' : 'Upload File'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Uploaded Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: uploadedFiles.length > 0 ? uploadedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), \" -\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `http://localhost:8080/uploads/${file.filename}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: file.originalname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)]\n      }, file._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No files uploaded yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentDashboard, \"SWa3kRIFQvC/pfHZ+aQOeUARbn8=\", false, function () {\n  return [useParams];\n});\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useParams","jsxDEV","_jsxDEV","StudentDashboard","_s","files","setFiles","Array","from","length","name","file","isUploaded","email","student","setStudent","uploadedFiles","setUploadedFiles","errorMessage","setErrorMessage","handleFileChange","index","e","updatedFiles","target","handleNameChange","value","handleUpload","alert","fileObj","formData","FormData","append","response","post","headers","fetchFiles","error","console","get","data","fetchStudentDetails","className","children","fileName","_jsxFileName","lineNumber","columnNumber","marks","map","type","onChange","placeholder","required","disabled","onClick","href","filename","rel","originalname","_id","_c","$RefreshReg$"],"sources":["C:/Users/prava/OneDrive/Desktop/login/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport './styles/StudentDashboard.css';\r\n\r\nfunction StudentDashboard() {\r\n  // Initialize files array with unique objects\r\n  const [files, setFiles] = useState(\r\n    Array.from({ length: 10 }, () => ({ name: '', file: null, isUploaded: false }))\r\n  );\r\n  const { email } = useParams();\r\n  const [student, setStudent] = useState({});\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleFileChange = (index, e) => {\r\n    const updatedFiles = [...files];\r\n    updatedFiles[index] = { ...updatedFiles[index], file: e.target.files[0] };\r\n    setFiles(updatedFiles);\r\n  };\r\n\r\n  const handleNameChange = (index, e) => {\r\n    const updatedFiles = [...files];\r\n    updatedFiles[index] = { ...updatedFiles[index], name: e.target.value };\r\n    setFiles(updatedFiles);\r\n  };\r\n\r\n  const handleUpload = async (index) => {\r\n    setErrorMessage('');\r\n\r\n    if (!email) {\r\n      alert('Email is required!');\r\n      return;\r\n    }\r\n\r\n    const fileObj = files[index];\r\n    if (fileObj.file && fileObj.name) {\r\n      const formData = new FormData();\r\n      formData.append('file', fileObj.file);\r\n      formData.append('name', fileObj.name);\r\n      formData.append('email', email);\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/upload', formData, {\r\n          headers: { 'Content-Type': 'multipart/form-data' },\r\n        });\r\n\r\n        // Mark the file as uploaded\r\n        const updatedFiles = [...files];\r\n        updatedFiles[index] = { ...updatedFiles[index], isUploaded: true };\r\n        setFiles(updatedFiles);\r\n\r\n        // Refresh uploaded files list\r\n        fetchFiles();\r\n        alert(`File \"${fileObj.name}\" uploaded successfully!`);\r\n      } catch (error) {\r\n        console.error(`Error uploading file \"${fileObj.name}\":`, error);\r\n        setErrorMessage(`Failed to upload \"${fileObj.name}\". Please try again.`);\r\n      }\r\n    } else {\r\n      setErrorMessage('File name and file are required for upload.');\r\n    }\r\n  };\r\n\r\n  const fetchFiles = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8080/files/${email}`);\r\n      setUploadedFiles(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching uploaded files:', error);\r\n    }\r\n  }, [email]);\r\n\r\n  const fetchStudentDetails = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8080/api/mentor/student/${email}/details`);\r\n      setStudent(response.data.student);\r\n    } catch (error) {\r\n      console.error('Error fetching student details:', error);\r\n    }\r\n  }, [email]);\r\n\r\n  useEffect(() => {\r\n    if (email) {\r\n      fetchFiles();\r\n      fetchStudentDetails();\r\n    }\r\n  }, [email, fetchFiles, fetchStudentDetails]);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Welcome back, {student.name || 'Student'}!</h2>\r\n      <p>Upload your certificates - Get Credit Points.</p>\r\n      <p>Total Marks: {student.marks || 0}</p>\r\n\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      \r\n      {files.map((fileObj, index) => (\r\n        <div key={index} className=\"file-upload-group\">\r\n          <label>\r\n            File {index + 1} Name:\r\n            <input\r\n              type=\"text\"\r\n              value={fileObj.name}\r\n              onChange={(e) => handleNameChange(index, e)}\r\n              placeholder=\"Enter file name\"\r\n              required\r\n              disabled={fileObj.isUploaded}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Choose File:\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => handleFileChange(index, e)}\r\n              required\r\n              disabled={fileObj.isUploaded}\r\n            />\r\n          </label>\r\n\r\n          <button\r\n            onClick={() => handleUpload(index)}\r\n            disabled={fileObj.isUploaded}\r\n          >\r\n            {fileObj.isUploaded ? 'Uploaded' : 'Upload File'}\r\n          </button>\r\n        </div>\r\n      ))}\r\n\r\n      <h3>Your Uploaded Files</h3>\r\n      <ul>\r\n        {uploadedFiles.length > 0 ? (\r\n          uploadedFiles.map((file) => (\r\n            <li key={file._id}>\r\n              <strong>{file.name}</strong> - \r\n              <a href={`http://localhost:8080/uploads/${file.filename}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {file.originalname}\r\n              </a>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No files uploaded yet.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}