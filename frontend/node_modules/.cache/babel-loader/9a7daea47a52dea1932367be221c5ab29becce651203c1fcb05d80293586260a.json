{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prava\\\\OneDrive\\\\Desktop\\\\login\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentDashboard() {\n  _s();\n  const [file, setFile] = useState(null);\n  //const [email, setEmail] = useState('');\n  const [files, setFiles] = useState([]);\n  const {\n    email\n  } = useParams(); // Get email from URL parameters\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const [student, setStudent] = useState({});\n  useEffect(() => {\n    const fetchStudentDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/student/details`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}` // Assuming you store the JWT token\n          }\n        });\n        if (response.data.success) {\n          setStudent(response.data.student);\n        } else {\n          console.error(response.data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching student details:', error);\n      }\n    };\n    fetchStudentDetails();\n  }, []);\n\n  /*\r\n    const handleEmailChange = (e) => {\r\n      setEmail(e.target.value);\r\n    };\r\n  */\n\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file || !email) {\n      alert('Please select a file and enter your email!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('email', email);\n    try {\n      const response = await axios.post('http://localhost:8080/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert(response.data.message);\n      fetchFiles(); // Fetch files again after upload\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  const fetchFiles = useCallback(async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/files/${email}`);\n      setFiles(response.data.files || []);\n      console.log('Fetched files:', response.data); // Log fetched files\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  }, [email]);\n  useEffect(() => {\n    if (email) {\n      fetchFiles(); // Fetch files when the email is not empty\n    }\n  }, [email, fetchFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", student.name || 'Student']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Marks: \", student.marks || 0]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          children: \"File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Uploaded Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.length > 0 ? files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `http://localhost:8080/uploads/${file.filename}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: file.originalname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)\n      }, file._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No files uploaded yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentDashboard, \"3lJa85D5UpDyk8BoC4lEXwZTbYs=\", false, function () {\n  return [useParams];\n});\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useParams","jsxDEV","_jsxDEV","StudentDashboard","_s","file","setFile","files","setFiles","email","handleFileChange","e","target","student","setStudent","fetchStudentDetails","response","get","headers","Authorization","localStorage","getItem","data","success","console","error","message","handleUpload","preventDefault","alert","formData","FormData","append","post","fetchFiles","log","children","name","fileName","_jsxFileName","lineNumber","columnNumber","marks","onSubmit","htmlFor","type","onChange","required","length","map","href","filename","rel","originalname","_id","_c","$RefreshReg$"],"sources":["C:/Users/prava/OneDrive/Desktop/login/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nfunction StudentDashboard() {\r\n  const [file, setFile] = useState(null);\r\n  //const [email, setEmail] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const { email } = useParams(); // Get email from URL parameters\r\n\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n  const [student, setStudent] = useState({});\r\n  useEffect(() => {\r\n    const fetchStudentDetails = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8080/api/student/details`,{\r\n              headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem('token')}` // Assuming you store the JWT token\r\n              }\r\n            });\r\n            if (response.data.success) {\r\n              setStudent(response.data.student);\r\n\r\n            }else {\r\n              console.error(response.data.message);\r\n          }\r\n        } catch (error) {\r\n            console.error('Error fetching student details:', error);\r\n        }\r\n    };\r\n\r\n    fetchStudentDetails();\r\n}, []);\r\n\r\n/*\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n*/\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    if (!file || !email) {\r\n      alert('Please select a file and enter your email!');\r\n      return;\r\n    }\r\n\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('email', email);\r\n\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/upload', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n      alert(response.data.message);\r\n      fetchFiles(); // Fetch files again after upload\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n    }\r\n  };\r\n\r\n\r\n  const fetchFiles = useCallback(async () => {\r\n    \r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/files/${email}`);\r\n        setFiles(response.data.files || []);\r\n        console.log('Fetched files:', response.data); // Log fetched files\r\n      } catch (error) {\r\n        console.error('Error fetching files:', error);\r\n      }\r\n    \r\n  }, [email]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (email) {\r\n      fetchFiles(); // Fetch files when the email is not empty\r\n    }\r\n  }, [email, fetchFiles]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Welcome, {student.name || 'Student'}</h2>\r\n      <p>Total Marks: {student.marks || 0}</p>\r\n      <form onSubmit={handleUpload}>\r\n        <div>\r\n          <label htmlFor=\"file\">File:</label>\r\n          <input\r\n            type=\"file\"\r\n            onChange={handleFileChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Upload File</button>\r\n      </form>\r\n      <h3>Your Uploaded Files</h3>\r\n      <ul>\r\n        {files.length > 0 ? (\r\n          files.map(file => (\r\n            <li key={file._id}>\r\n              <a href={`http://localhost:8080/uploads/${file.filename}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {file.originalname}\r\n              </a>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>No files uploaded yet.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default StudentDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}